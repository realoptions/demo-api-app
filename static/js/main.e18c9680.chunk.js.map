{"version":3,"sources":["Components/BottomBar.js","Routes/index.js","Actions/constants.js","Components/Authorize.js","Components/ApiKey.js","Actions/api.js","Components/MenuBar.js","Reducers/models.js","Reducers/constraints.js","Reducers/chartData.js","Reducers/needRefresh.js","Reducers/index.js","Reducers/mdlfn.js","Themes/index.js","Components/NoApiKey.js","Views/DensityChart.js","Views/OptionChart.js","Actions/transformScheme.js","Components/Form.js","Views/Inputs.js","App.js","serviceWorker.js","index.js"],"names":["badgeColor","refresh","badgeContent","chooseSelected","selected","BottomBar","withStyles","root","bottom","position","width","_ref","classes","match","params","densityRefresh","optionRefresh","resetDensityRefresh","resetOptionsRefresh","react_default","a","createElement","BottomNavigation_default","value","showLabels","className","BottomNavigationAction_default","component","Link","to","label","icon","Input_default","onClick","Badge_default","color","ShowChart_default","ScatterPlot_default","propTypes","PropTypes","shape","string","isRequired","bool","func","resetRefresh","dispatch","type","connect","_ref2","_ref2$needRefresh","needRefresh","density","options","onSubmitHOC","api","onSubmit","e","preventDefault","theme","textField","marginLeft","spacing","unit","marginRight","marginBottom","fn","defaultValue","_useState","useState","_useState2","Object","slicedToArray","apiState","setApiState","noValidate","autoComplete","TextField_default","onChange","target","autoFocus","Button_default","variant","mdlfn","open","handleOpen","Fragment","IconButton_default","aria-label","aria-owns","LockOpen_default","Lock_default","Dialog_default","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","Components_Authorize","getCacheResult","existingValue","Promise","resolve","updateFields","selectedModel","realOptions","existingModelValue","existingMarketValue","all","constraints","then","market","updateDensity","_ref3","parameters","updateRiskMetrics","_ref4","riskmetric","updateOptions","_ref5","sensitivityType","_ref6","_ref7","callAndIV","put","_filterIV","reduce","aggr","at_point","iv","call","concat","toConsumableArray","MenuBar","grow","flexGrow","onSelect","marketConstraints","setOpen","onChoice","selectedLabel","find","name","convertOptionsToName","innerText","AppBar_default","Toolbar_default","Typography_default","noWrap","selectedName","convertOptionsToLabel","Components_ApiKey","undefined","aria-haspopup","currentTarget","MoreVert_default","Menu_default","anchorEl","map","MenuItem_default","key","models","objectSpread","initState","combineReducers","arguments","length","state","action","genericConstraints","modelConstraints","genericType","defaultState","riskMetric","expected_shortfall","value_at_risk","option","genericRefresh","realoptions","api_key","version","url","chartData","Themes","typography","useNextVariants","palette","primary","teal","secondary","orange","NoApiKey","page","marginTop","mixins","toolbar","minHeight","backgroundColor","common","white","paddingTop","children","object","node","Density","withTheme","Components_NoApiKey","Density_default","assign","varColor","main","densityColor","arrayOf","number","_ref2$chartData","fakeArray","Option","PutCall_default","strikes","sensitivity","prices","putColor","callColor","ImpliedVolatility_default","impliedVolatility","lineColor","_ref2$chartData$optio","generateStrikes","asset","numStrikes","percentRange","minStrike","dx","i","push","moldAttributes","modelParameters","marketParameters","cf_parameters","errorHandler","inputValue","lower","upper","types","isInBetween","isBlank","isCorrectType","Number","isInteger","isFinite","error","flattenValue","obj","entries","objKey","curr","defineProperty","substr","startsWith","isNaN","parseFloat","modelFieldState","marketFieldState","modelFields","marketFields","setValue","_ref3$","_ref3$$value","Math","round","convertToType","convertLowerUpperToValue","container","overflow","setModelFieldStateValue","_useState3","_useState4","setMarketFieldStateValue","_ref6$","_ref8","_ref8$","_ref2$constraints","updateAllGraphs","lib_default","promiseFn","Resolved","Components_Form","Loading","CircularProgress_default","hght","height","createMuiTheme","Theme","store","createStore","modelApp","app","textAlign","es","styles","HashRouter","Components_MenuBar","style","Switch","Route","path","Inputs","Redirect","from","exact","DensityChart","OptionChart","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e18c9680.chunk.js","sourcesContent":["import React from 'react'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport Badge from '@material-ui/core/Badge'\nimport Input from '@material-ui/icons/Input'\nimport ScatterPlot from '@material-ui/icons/ScatterPlot'\nimport ShowChart from '@material-ui/icons/ShowChart'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { inputs, density, options } from '../Routes'\nimport { connect } from 'react-redux'\nimport { RESET_REFRESH } from '../Actions/constants'\nconst styles = {\n  root: {\n    bottom: '0%',\n    position: 'fixed',\n    width: '100%'\n  }\n}\nconst badgeColor = refresh => (refresh ? 'secondary' : 'default')\nconst badgeContent = refresh => refresh && 1\nexport const chooseSelected = selected => {\n  switch ('/' + selected) {\n    case inputs:\n      return 0\n    case density:\n      return 1\n    case options:\n      return 2\n    default:\n      return 0\n  }\n}\nconst BottomBar = withStyles(styles)(\n  ({\n    classes,\n    match: {\n      params: { selected }\n    },\n    densityRefresh,\n    optionRefresh,\n    resetDensityRefresh,\n    resetOptionsRefresh\n  }) => (\n    <BottomNavigation\n      value={chooseSelected(selected)}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        component={Link}\n        to={inputs}\n        label=\"Entry\"\n        icon={<Input />}\n      />\n      <BottomNavigationAction\n        component={Link}\n        to={density}\n        label=\"Density\"\n        onClick={resetDensityRefresh}\n        icon={\n          <Badge\n            color={badgeColor(densityRefresh)}\n            badgeContent={badgeContent(densityRefresh)}\n          >\n            <ShowChart />\n          </Badge>\n        }\n      />\n      <BottomNavigationAction\n        component={Link}\n        to={options}\n        label=\"Options\"\n        onClick={resetOptionsRefresh}\n        icon={\n          <Badge\n            color={badgeColor(optionRefresh)}\n            badgeContent={badgeContent(optionRefresh)}\n          >\n            <ScatterPlot />\n          </Badge>\n        }\n      />\n    </BottomNavigation>\n  )\n)\nBottomBar.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      selected: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  densityRefresh: PropTypes.bool.isRequired,\n  optionRefresh: PropTypes.bool.isRequired,\n  resetDensityRefresh: PropTypes.func.isRequired,\n  resetOptionsRefresh: PropTypes.func.isRequired\n}\nconst resetRefresh = (dispatch, type) => () =>\n  dispatch({\n    type: RESET_REFRESH,\n    value: type\n  })\n\nconst mapStateToProps = ({ needRefresh: { density, options } }) => ({\n  densityRefresh: density,\n  optionRefresh: options\n})\nconst mapDispatchToProps = dispatch => ({\n  resetDensityRefresh: resetRefresh(dispatch, 'density'),\n  resetOptionsRefresh: resetRefresh(dispatch, 'options')\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BottomBar)\n","export const inputs = '/inputs'\nexport const density = '/density'\nexport const options = '/options'\n","export const SELECT_MODEL = 'SELECT_MODEL'\nexport const UPDATE_API = 'UPDATE_API'\nexport const UPDATE_CONSTRAINTS = 'UPDATE_CONSTRAINTS'\nexport const UPDATE_DENSITY = 'UPDATE_DENSITY'\nexport const UPDATE_OPTIONS = 'UPDATE_OPTIONS'\nexport const UPDATE_RISK_METRIC = 'UPDATE_RISK_METRIC'\nexport const SET_ALL_REFRESH = 'SET_ALL_REFRESH'\nexport const RESET_REFRESH = 'RESET_REFRESH'\nexport const UPDATE_MARKET_CONSTRAINTS = 'UPDATE_MARKET_CONSTRAINTS'\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst onChange = (_state, fn) => e => fn(e.target.value)\nconst onSubmitHOC = (api, onSubmit) => e => {\n  e.preventDefault()\n  onSubmit(api)\n}\nconst styles = theme => ({\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: '100%'\n  }\n})\nconst Authorize = ({ onSubmit, defaultValue, classes }) => {\n  const [apiState, setApiState] = useState(defaultValue || '')\n  return (\n    <form\n      onSubmit={onSubmitHOC(apiState, onSubmit)}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        value={apiState}\n        onChange={onChange(apiState, setApiState)}\n        autoFocus\n        className={classes.textField}\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.textField}\n      >\n        Submit\n      </Button>\n    </form>\n  )\n}\nAuthorize.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string,\n  classes: PropTypes.object.isRequired\n}\nexport default withStyles(styles)(Authorize)\n","import React, {useState} from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport Lock from '@material-ui/icons/Lock'\nimport LockOpen from '@material-ui/icons/LockOpen'\nimport Authorize from './Authorize'\nimport { connect } from 'react-redux'\nimport {UPDATE_API} from '../Actions/constants'\nimport PropTypes from 'prop-types'\n\nexport const ApiKey=({mdlfn, onSubmit})=>{\n    const [open, handleOpen]=useState(false)\n    const handleCancel=()=>handleOpen(!open)\n    const onOpen=()=>handleOpen(true)\n    const onDialogSubmit=api=>{\n        handleOpen(false)\n        onSubmit(api)\n    }\n    return (\n        <>\n            <IconButton \n                aria-label=\"Lock\"\n                aria-owns='long-menu'\n                onClick={onOpen}\n                color=\"inherit\"\n            >\n                {mdlfn?<LockOpen/>:<Lock/>}\n            </IconButton>\n            <Dialog\n                open={open}\n                onClose={handleCancel}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">Enter API Key</DialogTitle>\n                <DialogContent>\n                    <Authorize onSubmit={onDialogSubmit}/>\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\nApiKey.propTypes={\n    onSubmit:PropTypes.func.isRequired,\n    mdlfn:PropTypes.object\n}\nconst mapStateToProps=({mdlfn})=>({mdlfn})\nconst mapDispatchToProps=dispatch=>({\n    onSubmit:value=>dispatch({type:UPDATE_API, value})\n})\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ApiKey)","import {\n  SELECT_MODEL,\n  UPDATE_CONSTRAINTS,\n  UPDATE_RISK_METRIC,\n  UPDATE_DENSITY,\n  UPDATE_OPTIONS,\n  UPDATE_MARKET_CONSTRAINTS\n} from './constants'\n//exported for testing\nexport const getCacheResult = (existingValue, fn) => {\n  if (existingValue) {\n    return Promise.resolve(existingValue)\n  } else {\n    return fn()\n  }\n}\nexport const filterIV = callArray =>\n  callArray.reduce(\n    (aggr, { at_point, value, iv }) => ({\n      call: [...aggr.call, { at_point, value }],\n      iv: [...aggr.iv, { at_point, iv }]\n    }),\n    { call: [], iv: [] }\n  )\n\nexport const updateFields = ({\n  dispatch,\n  selectedModel,\n  realOptions,\n  existingModelValue,\n  existingMarketValue\n}) => {\n  dispatch({\n    type: SELECT_MODEL,\n    value: selectedModel\n  })\n  if (!realOptions) {\n    return\n  }\n  return Promise.all([\n    getCacheResult(\n      existingModelValue,\n      realOptions[selectedModel].constraints\n    ).then(value => {\n      dispatch({\n        type: UPDATE_CONSTRAINTS,\n        value\n      })\n      return value\n    }),\n    getCacheResult(existingMarketValue, realOptions.market.constraints).then(\n      value => {\n        dispatch({\n          type: UPDATE_MARKET_CONSTRAINTS,\n          value\n        })\n        return value\n      }\n    )\n  ])\n}\n\nexport const updateDensity = ({\n  dispatch,\n  selectedModel,\n  parameters,\n  realOptions\n}) => {\n  if (!realOptions) {\n    return\n  }\n  return realOptions[selectedModel].density(parameters).then(value => {\n    dispatch({\n      type: UPDATE_DENSITY,\n      value\n    })\n  })\n}\nexport const updateRiskMetrics = ({\n  dispatch,\n  selectedModel,\n  parameters,\n  realOptions\n}) => {\n  if (!realOptions) {\n    return\n  }\n  return realOptions[selectedModel].riskmetric(parameters).then(value => {\n    dispatch({\n      type: UPDATE_RISK_METRIC,\n      value\n    })\n  })\n}\nexport const updateOptions = ({\n  dispatch,\n  selectedModel,\n  parameters,\n  sensitivityType,\n  realOptions\n}) => {\n  if (!realOptions) {\n    return\n  }\n  return Promise.all([\n    realOptions[selectedModel].options(\n      parameters,\n      'call',\n      sensitivityType,\n      true\n    ),\n    realOptions[selectedModel].options(parameters, 'put', sensitivityType)\n  ]).then(([callAndIV, put]) => {\n    const { call, iv } = filterIV(callAndIV)\n    dispatch({\n      type: UPDATE_OPTIONS,\n      value: { call, put, iv }\n    })\n  })\n}\nexport const updateAllGraphs = ({\n  dispatch,\n  selectedModel,\n  parameters,\n  sensitivityType,\n  realOptions\n}) =>\n  Promise.all([\n    updateDensity({\n      dispatch,\n      selectedModel,\n      parameters,\n      realOptions\n    }),\n    updateRiskMetrics({\n      dispatch,\n      selectedModel,\n      parameters,\n      realOptions\n    }),\n    updateOptions({\n      dispatch,\n      selectedModel,\n      parameters,\n      sensitivityType,\n      realOptions\n    })\n  ])\n","import React, { useState } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport AppBar from '@material-ui/core/AppBar'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport ApiKey from './ApiKey'\nimport { updateFields } from '../Actions/api'\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  }\n}\n\nconst convertOptionsToLabel = (options, selectedName) =>\n  options.find(({ name }) => name === selectedName).label\n\nconst convertOptionsToName = (options, selectedLabel) =>\n  options.find(({ label }) => label === selectedLabel).name\n\nexport const MenuBar = withStyles(styles)(\n  ({ options, onSelect, selected, mdlfn, classes, marketConstraints }) => {\n    const [open, setOpen] = useState(null)\n    const onClick = e => setOpen(e.currentTarget)\n    const onChoice = e => {\n      setOpen(null)\n      onSelect(\n        selected,\n        convertOptionsToName(options, e.target.innerText),\n        mdlfn,\n        marketConstraints\n      )\n    }\n    const onClose = () => setOpen(null)\n    return (\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Options: {convertOptionsToLabel(options, selected)}\n          </Typography>\n          <div className={classes.grow} />\n          <ApiKey />\n          <IconButton\n            aria-label=\"More\"\n            aria-owns={open ? 'long-menu' : undefined}\n            aria-haspopup=\"true\"\n            onClick={onClick}\n            color=\"inherit\"\n          >\n            <MoreVertIcon />\n          </IconButton>\n          <Menu\n            id=\"long-menu\"\n            anchorEl={open}\n            open={open === null ? false : true}\n            onClose={onClose}\n          >\n            {options.map(({ label, name }) => (\n              <MenuItem key={name} onClick={onChoice}>\n                {label}\n              </MenuItem>\n            ))}\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n)\nMenuBar.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n  marketConstraints: PropTypes.object,\n  mdlfn: PropTypes.object\n}\nconst mapStateToProps = ({\n  models,\n  mdlfn,\n  constraints: { marketConstraints }\n}) => ({ ...models, mdlfn, marketConstraints })\n//export for testing\nexport const mapDispatchToProps = dispatch => ({\n  onSelect: (selected, value, realOptions, marketConstraints) =>\n    selected !== value &&\n    updateFields({\n      dispatch,\n      selectedModel: value,\n      realOptions,\n      existingMarketValue: marketConstraints\n    })\n})\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuBar)\n","import { combineReducers } from 'redux'\nimport { SELECT_MODEL } from '../Actions/constants'\nconst initState = [\n  {\n    name: 'heston',\n    label: 'Heston'\n  },\n  {\n    name: 'cgmy',\n    label: 'CGMY'\n  },\n  {\n    name: 'merton',\n    label: 'Merton'\n  }\n]\nconst initSelect = 'heston'\n\nconst options = (state = initState) => {\n  return state\n}\nconst selected = (state = initSelect, action) => {\n  switch (action.type) {\n    case SELECT_MODEL:\n      return action.value\n    default:\n      return state\n  }\n}\nexport default combineReducers({\n  options,\n  selected\n})\n","import {\n  UPDATE_CONSTRAINTS,\n  UPDATE_MARKET_CONSTRAINTS\n} from '../Actions/constants'\nimport { combineReducers } from 'redux'\nconst genericConstraints = type => (state = null, action) => {\n  switch (action.type) {\n    case type:\n      return action.value\n    default:\n      return state\n  }\n}\n\nconst modelConstraints = genericConstraints(UPDATE_CONSTRAINTS)\nconst marketConstraints = genericConstraints(UPDATE_MARKET_CONSTRAINTS)\n\nexport default combineReducers({\n  modelConstraints,\n  marketConstraints\n})\n","import { combineReducers } from 'redux'\nimport {\n  UPDATE_RISK_METRIC,\n  UPDATE_OPTIONS,\n  UPDATE_DENSITY\n} from '../Actions/constants'\n\nconst genericType = (defaultState, type) => (state = defaultState, action) => {\n  switch (action.type) {\n    case type:\n      return action.value\n    default:\n      return state\n  }\n}\nexport const riskMetric = genericType(\n  { expected_shortfall: 0, value_at_risk: 0 },\n  UPDATE_RISK_METRIC\n)\nexport const option = genericType({ put: [], call: [], iv: [] }, UPDATE_OPTIONS)\nexport const density = genericType([], UPDATE_DENSITY)\nexport default combineReducers({\n  riskMetric,\n  option,\n  density\n})\n","import { SET_ALL_REFRESH, RESET_REFRESH } from '../Actions/constants'\nimport { combineReducers } from 'redux'\nconst genericRefresh = key => (state = false, action) => {\n  switch (action.type) {\n    case SET_ALL_REFRESH:\n      return true\n    case RESET_REFRESH:\n      if (action.value === key) {\n        return false\n      }\n      return state\n    default:\n      return state\n  }\n}\n\nconst density = genericRefresh('density')\nconst options = genericRefresh('options')\n\nexport default combineReducers({\n  density,\n  options\n})\n","import models from './models'\nimport mdlfn from './mdlfn'\nimport constraints from './constraints'\nimport chartData from './chartData'\nimport needRefresh from './needRefresh'\nimport { combineReducers } from 'redux'\n\nexport default combineReducers({\n  models,\n  mdlfn,\n  constraints,\n  needRefresh,\n  chartData\n})\n","import { UPDATE_API } from '../Actions/constants'\nimport realoptions from 'realoptions-node-sdk'\nconst url = process.env.NODE_ENV === 'production' ? undefined : ''\nexport default (state = null, action) => {\n  switch (action.type) {\n    case UPDATE_API:\n      return realoptions({ api_key: action.value, version: 'v1', url })\n    default:\n      return state\n  }\n}\n","import orange from '@material-ui/core/colors/orange'\nimport teal from '@material-ui/core/colors/teal'\nexport default {\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: teal,\n    secondary: orange\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nconst styles = theme => ({\n  page: {\n    marginTop: theme.mixins.toolbar.minHeight,\n    marginBottom: theme.mixins.toolbar.minHeight,\n    backgroundColor: theme.palette.common.white\n  },\n  api: {\n    paddingTop: 60\n  }\n})\nexport const NoApiKey = withStyles(styles)(({ mdlfn, children, classes }) => (\n  <div className={classes.page}>\n    {mdlfn ? children : <h3 className={classes.api}>Requires an API key!</h3>}\n  </div>\n))\nNoApiKey.propTypes = {\n  mdlfn: PropTypes.object,\n  children: PropTypes.node.isRequired\n}\n\nconst mapStateToProps = ({ mdlfn }) => ({ mdlfn })\n\nexport default connect(mapStateToProps)(NoApiKey)\n","import React from 'react'\nimport NoApiKey from '../Components/NoApiKey'\nimport DensityChart from 'option-charts/Density'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withTheme } from '@material-ui/core/styles'\nexport const Density = withTheme()(({ density, riskMetric, theme }) => (\n  <NoApiKey>\n    <DensityChart\n      density={density}\n      {...riskMetric}\n      varColor={theme.palette.secondary.main}\n      densityColor={theme.palette.primary.main}\n    />\n  </NoApiKey>\n))\nDensity.propTypes = {\n  density: PropTypes.arrayOf(\n    PropTypes.shape({\n      at_point: PropTypes.number.isRequired,\n      value: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  riskMetric: PropTypes.shape({\n    value_at_risk: PropTypes.number,\n    expected_shortfall: PropTypes.number\n  }).isRequired,\n  theme: PropTypes.shape({\n    palette: PropTypes.shape({\n      primary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired,\n      secondary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired\n    }).isRequired\n  })\n}\nconst mapStateToProps = ({ chartData: { density, riskMetric } }) => ({\n  density,\n  riskMetric\n})\n\nexport default connect(mapStateToProps)(Density)\n","import React from 'react'\nimport NoApiKey from '../Components/NoApiKey'\nimport OptionChart from 'option-charts/PutCall'\nimport ImpliedVolatilityChart from 'option-charts/ImpliedVolatility'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withTheme } from '@material-ui/core/styles'\nconst fakeArray = []\nexport const Option = withTheme()(({ put, call, iv, theme }) => (\n  <NoApiKey>\n    <OptionChart\n      call={call}\n      put={put}\n      strikes={fakeArray}\n      sensitivity=\"Price\"\n      prices={fakeArray}\n      putColor={theme.palette.secondary.main}\n      callColor={theme.palette.primary.main}\n    />\n    <ImpliedVolatilityChart\n      impliedVolatility={iv}\n      lineColor={theme.palette.primary.main}\n    />\n  </NoApiKey>\n))\nOption.propTypes = {\n  put: PropTypes.arrayOf(\n    PropTypes.shape({\n      at_point: PropTypes.number.isRequired,\n      value: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  call: PropTypes.arrayOf(\n    PropTypes.shape({\n      at_point: PropTypes.number.isRequired,\n      value: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  iv: PropTypes.arrayOf(\n    PropTypes.shape({\n      at_point: PropTypes.number.isRequired,\n      iv: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  theme: PropTypes.shape({\n    palette: PropTypes.shape({\n      primary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired,\n      secondary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired\n    }).isRequired\n  })\n}\nconst mapStateToProps = ({\n  chartData: {\n    option: { call, put, iv }\n  }\n}) => ({\n  call,\n  put,\n  iv\n})\n\nexport default connect(mapStateToProps)(Option)\n","export const generateStrikes = (asset, numStrikes, percentRange) => {\n  let strikes = []\n  const minStrike = percentRange * asset\n  const maxStrike = (1 + percentRange) * asset\n  const dx = (maxStrike - minStrike) / (numStrikes - 1)\n  for (let i = 0; i < numStrikes; ++i) {\n    strikes.push(minStrike + i * dx)\n  }\n  return strikes\n}\nexport const moldAttributes = (\n  { modelParameters, marketParameters },\n  strikes\n) => ({\n  ...marketParameters,\n  cf_parameters: modelParameters,\n  strikes\n})\n//exported for testing\nexport const flattenObj = key => obj =>\n  Object.entries(obj).reduce(\n    (aggr, [objKey, curr]) => ({\n      ...aggr,\n      [objKey]: curr[key]\n    }),\n    {}\n  )\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { flattenObj } from '../Actions/transformScheme'\nconst styles = theme => ({\n  container: {\n    flexGrow: 1,\n    paddingTop: theme.spacing.unit,\n    overflow: 'scroll'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 200\n  }\n})\nexport const errorHandler = ({ lower, upper, name, types }, inputValue) => {\n  const isInBetween = lower < inputValue && inputValue < upper\n  const isBlank = inputValue === ''\n  const isCorrectType =\n    (types === 'int' && Number.isInteger(inputValue)) ||\n    (types === 'float' && Number.isFinite(inputValue))\n  if (isBlank || (isInBetween && isCorrectType)) {\n    return { label: name, error: false }\n  } else if (!isInBetween) {\n    return { label: 'Value out of bounds', error: true }\n  } else if (!isCorrectType) {\n    return { label: `Value needs to be of type ${types}`, error: true }\n  }\n}\nconst flattenValue = flattenObj('value')\n\n//export for testing\nexport const allowedValues = value => {\n  if (value === '') {\n    return true\n  }\n  if (value === '.' || value.substr(-1) === '.') {\n    return true\n  }\n  if (\n    (value.startsWith('0.') || value.startsWith('.')) &&\n    value.substr(-1) === '0'\n  ) {\n    return true\n  }\n  if (isNaN(parseFloat(value))) {\n    return true\n  }\n  return false\n}\nconst onChange = (key, state, fn) => e =>\n  fn({\n    ...state,\n    [key]: {\n      ...state[key],\n      value: allowedValues(e.target.value)\n        ? e.target.value\n        : parseFloat(e.target.value)\n    }\n  })\n\nconst convertToType = (value, types) =>\n  types === 'int' ? Math.round(value) : value\n//export for testing\nexport const onSubmitHOC = (\n  modelFieldState,\n  marketFieldState,\n  onSubmit\n) => e => {\n  e.preventDefault()\n  onSubmit({\n    modelFields: flattenValue(modelFieldState),\n    marketFields: flattenValue(marketFieldState)\n  })\n}\nconst convertLowerUpperToValue = (name, lower, upper) => {\n  switch (name) {\n    case 'asset':\n      return 50\n    case 'maturity':\n      return 1\n    default:\n      return (lower + upper) * 0.5\n  }\n}\n//export for testing\nexport const setValue = obj =>\n  Object.entries(obj).reduce(\n    (\n      aggr,\n      [\n        name,\n        {\n          lower,\n          upper,\n          types,\n          value = convertToType(\n            convertLowerUpperToValue(name, lower, upper),\n            types\n          )\n        }\n      ]\n    ) => ({\n      ...aggr,\n      [name]: { lower, upper, value, types }\n    }),\n    {}\n  )\nconst Form = ({ modelFields, marketFields, onSubmit, classes }) => {\n  const [modelFieldState, setModelFieldStateValue] = useState(\n    setValue(modelFields)\n  )\n  const [marketFieldState, setMarketFieldStateValue] = useState(\n    setValue(marketFields)\n  )\n  return (\n    <form\n      onSubmit={onSubmitHOC(modelFieldState, marketFieldState, onSubmit)}\n      noValidate\n      autoComplete=\"off\"\n      className={classes.container}\n    >\n      {Object.entries(marketFieldState).map(\n        ([name, { lower, upper, value, types }]) => (\n          <TextField\n            {...errorHandler({ lower, upper, name, types }, value)}\n            value={value}\n            className={classes.textField}\n            key={name}\n            onChange={onChange(\n              name,\n              marketFieldState,\n              setMarketFieldStateValue\n            )}\n          />\n        )\n      )}\n      {Object.entries(modelFieldState).map(\n        ([name, { lower, upper, value, types }]) => (\n          <TextField\n            {...errorHandler({ lower, upper, name, types }, value)}\n            value={value}\n            className={classes.textField}\n            key={name}\n            onChange={onChange(name, modelFieldState, setModelFieldStateValue)}\n          />\n        )\n      )}\n      <Button\n        className={classes.textField}\n        variant=\"contained\"\n        color=\"secondary\"\n        type=\"submit\"\n      >\n        Submit\n      </Button>\n    </form>\n  )\n}\nForm.propTypes = {\n  marketFields: PropTypes.object.isRequired,\n  modelFields: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n}\nexport default withStyles(styles)(Form)\n","import React from 'react'\nimport Async from 'react-async'\nimport NoApiKey from '../Components/NoApiKey'\nimport { updateFields, updateAllGraphs } from '../Actions/api'\nimport { connect } from 'react-redux'\nimport Form from '../Components/Form'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport PropTypes from 'prop-types'\nimport { SET_ALL_REFRESH } from '../Actions/constants'\nimport { moldAttributes, generateStrikes } from '../Actions/transformScheme'\nconst NUM_STRIKES = 10\nconst PERCENT_RANGE = 0.5\nexport const Inputs = ({\n  selected,\n  updateFields,\n  mdlfn,\n  modelConstraints,\n  marketConstraints,\n  updateAllGraphs\n}) => (\n  <NoApiKey>\n    <Async\n      promiseFn={updateFields(\n        mdlfn,\n        modelConstraints,\n        marketConstraints,\n        selected\n      )}\n    >\n      <Async.Resolved>\n        {marketConstraints && modelConstraints ? (\n          <Form\n            marketFields={marketConstraints}\n            modelFields={modelConstraints}\n            onSubmit={updateAllGraphs(mdlfn, selected)}\n          />\n        ) : null}\n      </Async.Resolved>\n      <Async.Loading>\n        <CircularProgress />\n      </Async.Loading>\n    </Async>\n  </NoApiKey>\n)\nInputs.propTypes = {\n  selected: PropTypes.string.isRequired,\n  updateFields: PropTypes.func.isRequired,\n  updateAllGraphs: PropTypes.func.isRequired,\n  mdlfn: PropTypes.object,\n  modelConstraints: PropTypes.object,\n  marketConstraints: PropTypes.shape({\n    asset: PropTypes.shape({\n      lower: PropTypes.number.isRequired,\n      upper: PropTypes.number.isRequired\n    }).isRequired\n  })\n}\nconst mapStateToProps = ({\n  mdlfn,\n  models: { selected },\n  constraints: { marketConstraints, modelConstraints }\n}) => ({\n  mdlfn,\n  selected,\n  modelConstraints,\n  marketConstraints\n})\n//exported for testing\nexport const mapDispatchToProps = dispatch => ({\n  updateFields: (mdlfn, modelConstraints, marketConstraints, selected) => () =>\n    updateFields({\n      dispatch,\n      realOptions: mdlfn,\n      existingModelValue: modelConstraints,\n      existingMarketValue: marketConstraints,\n      selectedModel: selected\n    }),\n  updateAllGraphs: (mdlfn, selected) => ({ modelFields, marketFields }) => {\n    dispatch({ type: SET_ALL_REFRESH })\n    updateAllGraphs({\n      dispatch,\n      selectedModel: selected,\n      parameters: moldAttributes(\n        { modelParameters: modelFields, marketParameters: marketFields },\n        generateStrikes(marketFields.asset, NUM_STRIKES, PERCENT_RANGE)\n      ),\n      realOptions: mdlfn,\n      sensitivityType: 'price'\n    })\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Inputs)\n","import React from 'react'\nimport BottomBar from './Components/BottomBar'\nimport MenuBar from './Components/MenuBar'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport modelApp from './Reducers'\nimport Theme from './Themes'\nimport DensityChart from './Views/DensityChart'\nimport OptionChart from './Views/OptionChart'\nimport Inputs from './Views/Inputs'\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\nimport { inputs, density, options } from './Routes'\nimport { withStyles } from '@material-ui/core/styles'\nconst styles = theme => ({\n  app: {\n    backgroundColor: theme.palette.common.white,\n    height: '100vh',\n    textAlign: 'center'\n  }\n})\nconst hght = { height: 20 }\nconst theme = createMuiTheme(Theme)\nconst store = createStore(modelApp)\nconst App = ({ classes }) => (\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <Router>\n        <div className={classes.app}>\n          <MenuBar />\n          <div style={hght} />\n          <Switch>\n            <Route path={inputs} component={Inputs} />\n            <Redirect from=\"/\" to={inputs} exact />\n          </Switch>\n          <Route path={density} component={DensityChart} />\n          <Route path={options} component={OptionChart} />\n          <Route path=\"/:selected\" component={BottomBar} />\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  </Provider>\n)\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}